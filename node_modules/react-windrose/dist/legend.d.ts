import type { SVGProps } from "react";
export interface BaseLegendProps extends SVGProps<SVGGElement> {
    /** Array of labels of the bins for each legend entry */
    bins: ReadonlyArray<string>;
    /** Array of colors to use for each legend entry */
    colorScheme: ReadonlyArray<string>;
    /** Width of the legend symbol in pixels */
    symbolWidth?: number;
    /** Height of the legend symbol in pixels */
    symbolHeight?: number;
    /** Additional spacing between legend entries in pixels (added to symbolHeight) */
    spacing?: number;
    /** Horizontal offset for the text label in pixels */
    textX?: number;
    /** Vertical offset for the text label in pixels */
    textY?: number;
    /** Additional props to pass to the text elements */
    textProps?: React.SVGProps<SVGTextElement>;
    /** Optional children to render inside the legend group, useful for adding a title or a background */
    children?: React.ReactNode;
}
export interface RectLegendProps extends BaseLegendProps {
    symbol?: "rect";
    /** Additional props to pass to the rectangle elements */
    symbolProps?: React.SVGProps<SVGRectElement>;
}
export interface CircleLegendProps extends BaseLegendProps {
    symbol: "circle";
    /** Additional props to pass to the circle elements */
    symbolProps?: React.SVGProps<SVGCircleElement>;
}
export type LegendProps = RectLegendProps | CircleLegendProps;
/**
 * Renders a vertical legend for a windrose chart
 * @param props - The component props
 * @returns An SVG group element containing the legend
 */
export declare function VerticalLegend({ bins, colorScheme, symbolWidth, symbolHeight, spacing, textX, textY, symbol, symbolProps, textProps, children, ...props }: LegendProps): import("react/jsx-runtime").JSX.Element;
/**
 * Renders a horizontal legend for a windrose chart
 * @param props - The component props
 * @returns An SVG group element containing the legend
 */
export declare function HorizontalLegend({ bins, colorScheme, symbolWidth, symbolHeight, spacing, textX, textY, symbol, symbolProps, textProps, children, ...props }: LegendProps): import("react/jsx-runtime").JSX.Element;
