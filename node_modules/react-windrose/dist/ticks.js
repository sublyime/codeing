import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {} from "d3-scale";
import { fluidFontSize } from "./util.js";
/**
 * Renders a single circular tick mark at a specified radius
 * @param props - The component props
 * @returns An SVG circle element representing a tick mark
 */
export function TickCircle({ tick, yScale, ...props }) {
    return (_jsx("circle", { fill: "none", stroke: "gray", strokeWidth: "1", strokeDasharray: "4", ...props, r: yScale(tick) }));
}
/**
 * Renders a single tick value label at a specified radius
 * @param props - The component props
 * @returns An SVG text element displaying the formatted tick value
 */
export function TickLabel({ tick, yScale, ...props }) {
    const tickFormat = yScale.tickFormat();
    return (_jsx("text", { x: 0, dy: "0.35em", paintOrder: "stroke", strokeWidth: "2", stroke: "white", fill: "black", ...props, y: -yScale(tick), children: tickFormat(tick) }));
}
/**
 * Renders a complete tick mark with both circle and label
 * @param props - The component props
 * @returns A group containing a circle and text element for the tick
 */
export function Tick({ tick, yScale, circleProps, textProps }) {
    return (_jsxs("g", { name: "tick", children: [_jsx(TickCircle, { tick: tick, yScale: yScale, ...circleProps }), _jsx(TickLabel, { tick: tick, yScale: yScale, ...textProps })] }));
}
/**
 * Renders a group of tick marks with their labels
 * @param props - The component props
 * @returns A group of SVG elements containing tick marks and labels
 */
export function Ticks({ yScale, tickCount, outerRadius, tickProps, ...props }) {
    const yTicks = yScale.ticks(tickCount);
    return (_jsx("g", { name: "ticks", textAnchor: "middle", fontSize: fluidFontSize(0.12)(outerRadius), ...props, children: yTicks.map((tick) => (_jsx(Tick, { tick: tick, yScale: yScale, ...tickProps }, tick))) }));
}
//# sourceMappingURL=ticks.js.map