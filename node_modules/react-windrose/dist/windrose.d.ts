import { type ReactNode, type SVGProps } from "react";
import type { WindroseDataPoint } from "./types.js";
/**
 * Props for the WindRose component that renders a wind rose chart
 * @template TBins - Type of the bins array
 * @template TDirections - Type of the directions array
 * @ignore SVGProps<SVGSVGElement>
 */
export interface WindRoseProps<TBins extends ReadonlyArray<string> = ReadonlyArray<string>, TDirections extends ReadonlyArray<string> = ReadonlyArray<string>> extends SVGProps<SVGSVGElement> {
    /** Array of data points for the wind rose chart */
    data: Array<WindroseDataPoint<TBins[number], TDirections[number]>>;
    /** Array of bin labels for the wind rose segments */
    bins: TBins;
    /** Array of colors to use for the wind rose segments */
    colorScheme: ReadonlyArray<string>;
    /** Width of the SVG in pixels */
    width?: number;
    /** Height of the SVG in pixels */
    height?: number;
    /** Units to display on the y-axis */
    yUnits?: string;
    /** Number of tick marks to display (default: 4) */
    tickCount?: number;
    /** Outer radius of the wind rose chart (default: min(width, height) / 2.5) */
    outerRadius?: number;
    /** Inner radius of the wind rose chart (default: 20) */
    innerRadius?: number;
    /** Array of direction labels to display (defaults to unique directions from data) */
    labelDirections?: Array<string>;
    /** Angle padding between segments in radians (default: 0.05) */
    padAngle?: number;
    /** Maximum value for the y-axis scale (defaults to maximum value in data) */
    maxY?: number;
    /** Optional children to render inside the SVG */
    children?: ReactNode;
}
/**
 * Renders a wind rose chart showing the distribution of wind speed and direction
 * @template TBins - Type of the bins array
 * @template TDirections - Type of the directions array
 * @param props - The component props
 * @returns An SVG element containing the wind rose chart
 */
export declare function WindRose<TBins extends ReadonlyArray<string>, TDirections extends ReadonlyArray<string>>({ data, bins, yUnits, width, height, colorScheme, labelDirections, innerRadius, outerRadius, tickCount, padAngle, maxY, children, ...props }: WindRoseProps<TBins, TDirections>): import("react/jsx-runtime").JSX.Element;
export default WindRose;
